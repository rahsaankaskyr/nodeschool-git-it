
	Nodeschool.io - Git-it


> 1 install git and config user name & email

	$ git --version
	$ git config --global user.name "Your Name"
	$ git config --global user.email "email@email.com"

> 2 repositories 
	- create repo
	$ mkdir <FOLDERNAME>
	$ cd <FOLDERNAME>
	$ git init
	$ git status

> 3 commit to it
	- create new file
	$ git status
	$ git add <FILENAME.txt>
	$ git add . [ add all files & changes]
	$ git commit -m "created FILENAME.txt"

	- view changes to files
	$ git diff

> 4 gitHubbin
	- add GitHub username to git
	$ git config --global user.name <ACCOUNT_NAME>
	$ git config --global user.email <EMAIL>
	$ git config --global user.username <USER_NAME>
	$ git config --global user.username <TO CHECK>

> 5 remote control
	- create a remote repo
	- readme, gitignores, and licenses
	- readme - explains what the project is	
		- how to use it
		- how to contribute [contributing.md]

	- .gitignore - is a list of files, Git should not track
		- example - files with passwords

	- license - type of license you put on your project
		- choosealicense.com

	- connect local to remote
		$ git remote add origin <URLFROMGITHUB>
	
	- push work to remote 
		$ git push origin master
	

	- add remote connection
		$ git remote add <REMOTENAME> <URL>
	- set a URL to a remote
		$ git remote set-url <REMOTENAME> <URL>
	- pull in changes
		$ git pull <REMOTENAME> <BRANCHNAME>
	- view remote addresses
		$ git remote -v
	- push changes
		$ git push <REMOTENAME> <BRANCH>

> 6 forks and clones
	https://github.com/takonyc/patchwork
	- terminal - clone repo
	$ git clone https://github.com/takonyc/patchwork
	$ cd patchwork
	$ git remote -v

	- connect to original repo
	- pull changes
	$ git remote add upstream https://github.com/jlord/patchwork.git
	$git remote -v
	- origin remote
		- with fork address
		- upstream remote with address to original

	- add a remote
	$ git remote add <REMOTENAME> <URL>	
	- change a remote URL
	$ git remote set-url <REMOTENAME> <URL>
	- view remote connections
	$ git remote -v

> 7 branches aren't just for birds
	-  http://githubusername.github.io/repositoryname
	- create a branch
	$ git branch <add-BRANCHNAME>
	
	- checkout branch to work on it
	$ git checkout <add-BRANCHNAME>

	- create a new file with text-editor
	- save to patchwork/contributors/add-username.txt

	- steps for checking projects
	$ git status
	$ git add <contributors/FILENAME>
	$ git commit -m "commit message"
	
	- push update to new fork 'origin'
	$ git push origin <BRANCHNAME>






















